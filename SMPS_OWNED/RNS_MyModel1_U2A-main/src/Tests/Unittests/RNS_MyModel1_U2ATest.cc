/***************************************************************************
 * Copyright 1996-2025 Synopsys, Inc.
 *
 * This Synopsys software and all associated documentation are proprietary
 * to Synopsys, Inc. and may only be used pursuant to the terms and
 * conditions of a written license agreement with Synopsys, Inc.
 * All other use, reproduction, modification, or distribution of the
 * Synopsys software or the associated documentation is strictly prohibited.
 ***************************************************************************/
 

/***************************************************************************
 * Generated by: TLM Creator
 ***************************************************************************/

// CHECKSUM:141a4e228e8926a88d3d2af95f4f08ceb4c86d83 
// CLASS_ID:testclass_1

#include <RNS_MyModel1_U2ATestHarness.h>



using namespace scml2::testing;




class RNS_MyModel1_U2ATest : public RNS_MyModel1_U2ATestHarness {

  // Register the test class and all test methods
  SCML2_BEGIN_TESTS(RNS_MyModel1_U2ATest);
  SCML2_TEST(testAlwaysSucceeds);
  SCML2_END_TESTS();

  RNS_MyModel1_U2ATest() {
  }
  
  // Override this if you want a customize construction of your model under test // ! Only available when not reusing component build in test
  //virtual RNS_MyModel1_U2A* create_model_under_test(const char* name) { // ! Only available when not reusing component build in test
  //  return new RNS_MyModel1_U2A(name); // ! Only available when not reusing component build in test
  //}

  // Override this if you want to customize construction of your mirror model
  //virtual RNS_MyModel1_U2AMirrorBase* create_mirror_model(const char* name) {
  //  return new RNS_MyModel1_U2AMirrorBase(name);
  //}
    
  // initialize is called once at the start of the test run, after the model and
  // the mirror model have been created & connected. Initialize the models further here,
  // set up extra connections, set clock periods, ...
  virtual void initialize() {
  }
  
  // Called before running each testcase
  // Reset your model here.
  virtual void setup() {
  }
  
  // Called after running each testcase
  virtual void teardown() {
  }
  
  // Called at the end of the complete testrun
  virtual void shutdown() {
  }
  
  void testAlwaysSucceeds() {
    //enable_logging()
	SCML2_ASSERT_THAT(true, "test always succeeds");
  }
  // TOOL_INSERT_TESTS_HERE - DO NOT REMOVE THIS LINE
};



//SCML2_REGISTER_TEST_GROUP_WITH_PARAMETERS(RNS_MyModel1_U2ATest, parameter_configurations(parameter_configuration("Default")));
SCML2_REGISTER_TEST_GROUP(RNS_MyModel1_U2ATest);
